@import url("https://fonts.googleapis.com/css2?family=Poppins&display=swap");

html {
    
}

#circularcursor {
    background-color: transparent;
    border:1px solid white;    
    height:20px;
    width:20px;
    border-radius:50%;
    -moz-border-radius:50%;
    -webkit-border-radius:50%;
    position: absolute;
    z-index: 1;
}

:root {
    --bg: hsl(0 0% 2%);
    --color: hsl(0 0% 100%);
    --underline-width: 1lh;
    --underline-block-width: 200vmax;
    --underline-color: hsl(0 0% 50% / 0.05);
    --underline-transition: 5s;
    --finish-fill: hsl(0 0% 100%);
    --accent: hsl(0 0% 100%);
    --fill: hsl(0 0% 50%);
}

header.front-page-header{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    background-color: hsl(0 0% 2%);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
    display: flex;
    text-align: center;
    padding: 20px 0;
}

header.front-page-header h2 {
    color: hsl(0 0% 100%);
    font-size: 16px;
    align-items: center;
    font-family: 'Poppins', sans-serif;
}


p {
    color: hsl(0 0% 100%);
    font-size: 16px;
    align-items: center;
    font-family: 'Poppins', sans-serif;
}

h3 {
    color : hsl(0 0% 100%);
}


:root:has(#driver:checked) section {
    outline: 1rem dashed hsl(0 80% 50% / 0.5);
    background: hsl(0 80% 50% / 0.1);
}

.controls {
    position: fixed;
    top: 1rem;
    right: 1rem;
    padding: 1rem 2rem;
    border-radius: 100px;
    z-index: 2;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: hsl(0 0% 90%);
    color: hsl(0 0% 10%);
}

p {
    width: 50vw;
    resize: none;
    max-width: 100vw;
    overflow: hidden;
    position: fixed;
    padding:10vmin;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    animation: fill-up both linear;
    animation-timeline: --section;
    animation-range: cover;
    margin: 0;
}



p > span {
    outline-color: hsl(10 80% 50%);
    outline-offset: 1ch;
    font-size: clamp(3rem, 4vw + 1rem, 10rem);
    color: var(--color);
    text-decoration: none;
    background-image:
          /* First one is the highlight */
    
}

section {
    margin: 100vh 0;
    height: 100vh;
    width: 100vw;
    view-timeline-name: --section;
    resize: none;
}


body {
    -ms-overflow-style: none; /* for Internet Explorer, Edge */
    scrollbar-width: none; /* for Firefox */
    overflow-y: scroll; 
    opacity: 0;
    transition: opacity 0s ease-in-out;
    align-items: center;
    background-color: var(--bg);
    color: var(--color);
    display: flex;
    font-family: sans-serif;
    font-weight: bold;
    justify-content: center;
    min-height: 200vh;
    accent-color: hsl(0 0% 100%);
}

body.fade-in {
    opacity: 1;
}

body::-webkit-scrollbar {
    display: none; /* for Chrome, Safari, and Opera */
}



footer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: hsl(0 0% 2%);
    color: white;
    padding: 20px 0;
}

footer .container {
    display: flex;
    justify-content: center;
}

footer .btn {
    display: inline-block;
    padding: 10px 20px;
    background-color: hsl(0 0% 2%);
    color: white;
    text-decoration: none;
    border-radius: 5px;
    transition: all 0.3s ease-in-out;
}

footer .btn:hover {
    background-color: white;
    color:  hsl(0 0% 2%);
}





.blinking {
    animation: blink 3s infinite;
}

.cursor {
    display: inline-block;
    vertical-align: bottom;
    animation: blink 1s infinite;
}



.sticky {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 999;
}



@keyframes blink {
    50% {
    opacity: 0;
    }
}

@keyframes color-in {
    to {
    color: var(--finish-fill);
}
}

@keyframes fill-up {
    to {
    --progress: 1;
}
}

@keyframes color-in {
    to {
    color: var(--finish-fill);
}
}

@property --progress {
    initial-value: 0;
    syntax: '<number>';
    inherits: true;
}
